# 添加基本的 events 配置
events {
    worker_connections 1024;
}

http {
    # 基本 MIME 类型设置
    include mime.types;
    default_type application/octet-stream;

    # 日志格式定义
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" uht="$upstream_header_time" urt="$upstream_response_time"';

    # 日志配置
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log info;

    # 添加 DNS 解析器配置
    resolver 8.8.8.8 8.8.4.4 ipv6=off;
    resolver_timeout 5s;

    # SSL 配置
    lua_ssl_trusted_certificate /etc/ssl/certs/ca-certificates.crt;
    lua_ssl_verify_depth 5;
    
    # 启用 SSL 会话缓存
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # 代理配置
    proxy_ssl_server_name on;
    proxy_ssl_protocols TLSv1.2 TLSv1.3;
    proxy_http_version 1.1;
    proxy_ssl_verify off;  # 如果需要验证证书，设置为 on

    # 引入 Lua 模块
    lua_package_path "/etc/nginx/lua/?.lua;;";

    # 加载配置文件
    init_by_lua_block {
        package.path = "/etc/nginx/lua/?.lua;" .. package.path
    }

    server {
        listen 8090;
        
        # 声明 backend_url 变量
        set $backend_url '';

        # 动态路由和API Key管理
        location /chat/completions {
            access_by_lua_file /etc/nginx/lua/dynamic_routing.lua;
            proxy_pass $backend_url;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /embeddings {
            access_by_lua_file /etc/nginx/lua/dynamic_routing.lua;
            proxy_pass $backend_url;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}